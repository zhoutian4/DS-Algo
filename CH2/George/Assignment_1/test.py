

# Download the helper library from https://www.twilio.com/docs/python/install
import os
from twilio.rest import Client
import config_parser as conf
import pandas as pd

# # Your Account Sid and Auth Token from twilio.com/console
# # and set the environment variables. See http://twil.io/secure
# account_sid = conf.sms()["SID"]
# auth_token = conf.sms()["auth_token"]
# from_number = conf.sms()["from_phone"]
# to_number = conf.sms()["to_phone"]
# client = Client(account_sid, auth_token)
#
# message = client.messages \
#     .create(
#          body='This is test',
#          from_= from_number,
#          to=to_number
#      )
#
# print(message.sid)



# df = pd.DataFrame({'count': 1})
dict1 = {"s":"no_data"}
dict2 = {"c":[115.36000061035,115.54000091553,112.12999725342,110.33999633789,106.83999633789,110.08000183105,111.80999755859,107.12000274658,108.2200012207,112.2799987793,114.95999908447,114.08999633789,115.80999755859,116.79000091553,113.01999664307,116.5,113.16000366211,115.08000183105,114.9700012207,116.9700012207,124.40000152588,121.09999847412,121.19000244141,120.70999908447,119.01999664307,115.98000335693,117.51000213623,116.87000274658,115.75,115.04000091553,115.05000305176,116.59999847412,111.19999694824,115.31999969482,108.86000061035,108.76999664307,110.44000244141,114.94999694824,119.0299987793,118.69000244141,116.31999969482,115.9700012207,119.48999786377,119.20999908447,119.26000213623,120.30000305176,119.38999938965,118.0299987793,118.63999938965,117.33999633789,113.84999847412,115.16999816895,116.0299987793,116.58999633789,119.05000305176,122.7200012207,123.08000183105,122.94000244141,122.25,123.75,124.37999725342,121.7799987793,123.23999786377,122.41000366211,121.7799987793,127.87999725342,127.80999755859,128.69999694824,126.6549987793,128.22999572754,131.88000488281,130.96000671387,131.9700012207,136.69000244141,134.86999511719,133.7200012207,132.69000244141,129.41000366211,131.00999450684,126.59999847412,130.91999816895,132.05000305176,128.97999572754,128.80000305176,130.88999938965],"h":[115.93000030518,118.83000183105,116,112.19999694824,110.87999725342,110.19000244141,112.86000061035,112.11000061035,110.25,112.44000244141,115.31999969482,115.29000091553,117.23999786377,117.62999725342,115.37000274658,116.65000152588,116.08999633789,115.45999908447,116.30000305176,117,125.16000366211,125.31999969482,122.98999786377,121.19000244141,121.547996521,120.40000152588,118.9700012207,118.69000244141,118.01999664307,116.55000305176,116.51999664307,117.26999664307,115.41999816895,116.93000030518,111.98999786377,110.68000030518,111.48999786377,115.58999633789,119.62000274658,119.19999694824,121.98000335693,117.58000183105,119.58999633789,120.51999664307,119.67169952393,120.98999786377,120.66999816895,119.81999969482,118.94999694824,118.76999664307,117.58999633789,115.84999847412,116.75,117.48999786377,120.9700012207,123.46929931641,123.37000274658,123.76999664307,122.86080169678,124.54000091553,124.98000335693,125.93000030518,123.86000061035,122.76000213623,123.31999969482,127.88999938965,128.36999511719,129.52000427246,129.10000610352,128.25999450684,134.39999389648,132.32000732422,133.46000671387,137.33999633789,138.7799987793,135.96000671387,134.74000549316,133.60000610352,131.71000671387,131.0299987793,131.61999511719,132.63000488281,130.11999511719,129.66000366211,131.42999267578],"l":[112.80000305176,113.61000061035,112.04000091553,108.70999908447,106.08999633789,103.09999847412,109.16000366211,106.76999664307,105,107.66999816895,112.7799987793,113.61000061035,113.75,115.86000061035,112.2200012207,113.55000305176,112.30000305176,114.13999938965,114.59999847412,114.91999816895,119.36000061035,119.88999938965,119.62999725342,119.09999847412,118.80999755859,115.68000030518,115.66000366211,116.58000183105,114.87999725342,114.2799987793,112.88999938965,114.54000091553,111.16999816895,112.19999694824,107.7200012207,107.31999969482,108.73000335693,112.34999847412,116.87999725342,116.12999725342,116.12000274658,114.13999938965,116.51000213623,118.58000183105,117.87000274658,118.16999816895,118.98999786377,118,116.83999633789,117.29000091553,113.76000213623,112.58999633789,115.23000335693,116.2200012207,116.80999755859,120.01000213623,120.91999816895,122.23999786377,121.51999664307,122.26000213623,123.11000061035,121.06999969482,120.37000274658,120.55000305176,121.7200012207,124.15000152588,126.55999755859,128.05000305176,126.12000274658,123.4700012207,129.66000366211,130.83000183105,131.10000610352,133.52000427246,134.36000061035,133.39999389648,131.7200012207,126.80000305176,128.5299987793,126.4700012207,127.87999725342,130.22999572754,128.58999633789,126.88999938965,128.55999755859],"o":[114.7200012207,118.33000183105,115.23000335693,109.7200012207,110.40000152588,104.54000091553,112.68000030518,111.62000274658,105.16999816895,108.43000030518,115.01000213623,114.54000091553,113.79000091553,117.62999725342,112.88999938965,113.91000366211,115.80000305176,114.69999694824,116.19999694824,115.2799987793,120.01999664307,125.31999969482,120.91999816895,119.12999725342,121.2799987793,120.01000213623,116.08000183105,116.58000183105,117.41000366211,116.38999938965,113.88999938965,115.48000335693,114.94999694824,112.37000274658,111.05999755859,109.11000061035,109.66000366211,114.13999938965,118,118.31999969482,120.5,115.56999969482,117.16999816895,119.55000305176,119.44000244141,118.93000030518,119.51000213623,118.61000061035,117.33000183105,118.63999938965,117.20999908447,113.95999908447,115.62999725342,116.56999969482,116.9700012207,121.01000213623,122.15000152588,123.51000213623,122.59999847412,122.33999633789,124.30000305176,124.48999786377,120.37000274658,122.43000030518,122.54000091553,124.26000213623,127.41000366211,129,128.96000671387,125.0299987793,131.67999267578,132.17999267578,131.32000732422,133.99000549316,138.05000305176,135.71000671387,134.08000183105,133.44999694824,129,127.51999664307,128.41000366211,132.42999267578,128.99000549316,128.39999389648,128.64999389648],"s":"ok","t":[1600041600,1600128000,1600214400,1600300800,1600387200,1600646400,1600732800,1600819200,1600905600,1600992000,1601251200,1601337600,1601424000,1601510400,1601596800,1601856000,1601942400,1602028800,1602115200,1602201600,1602460800,1602547200,1602633600,1602720000,1602806400,1603065600,1603152000,1603238400,1603324800,1603411200,1603670400,1603756800,1603843200,1603929600,1604016000,1604275200,1604361600,1604448000,1604534400,1604620800,1604880000,1604966400,1605052800,1605139200,1605225600,1605484800,1605571200,1605657600,1605744000,1605830400,1606089600,1606176000,1606262400,1606435200,1606694400,1606780800,1606867200,1606953600,1607040000,1607299200,1607385600,1607472000,1607558400,1607644800,1607904000,1607990400,1608076800,1608163200,1608249600,1608508800,1608595200,1608681600,1608768000,1609113600,1609200000,1609286400,1609372800,1609718400,1609804800,1609891200,1609977600,1610064000,1610323200,1610409600,1610496000],"v":[140150080,184642032,155026672,178010976,287104896,195713808,183055376,150718672,167743344,149981440,137672400,100060528,142675184,116120440,144712000,106244000,161498208,96848984,83477152,100507000,240226768,262330448,151062304,112559216,115394000,120639336,124423728,89945984,101987952,82573000,111850656,92276768,143937824,146128992,190572992,122867000,107624000,138235008,126387072,114458000,154515312,138023392,112294952,103350672,81689000,91183016,74270976,76322112,74112976,73604000,127959320,113874216,76499232,46691000,167204992,125922000,89004192,78967632,78260000,86711992,82225512,115089192,81312168,86940000,79075984,157572256,96927000,94359808,192540992,121251552,169351824,88223696,54930000,124486240,121047328,96452128,99117000,143301888,97664896,155087968,109578160,105158000,100620880,91951144,88200408]}
print(isinstance(dict1["s"],str))
print(dict2["s"]=="ok")
# print(pd.DataFrame(dict2))


etst = ["1","2"]
a = ""
for t in etst:
    a = a + str(t) + ","


a = "1"
print(len(a)!=0)
print(a[:-1])


